Here is a full example that demonstrates how to use the Text widget to create a simple text editor:


import tkinter as tk

import tkinter.filedialog

root = tk.Tk()

# Adjust Size
root.geometry("1000x800")

root.title("Text Editor")

# Function to handle save button click
def save():
    file_name = tk.filedialog.asksaveasfilename(defaultextension=".txt", filetypes=[("Text Files", "*.txt"), ("All Files", "*.*")])

    if file_name:
        with open(file_name, "w") as f:
            text = text_widget.get("1.0", tk.END)
            f.write(text)

# Create a text widget for the main text area
text_widget = tk.Text(root, wrap="word")
text_widget.pack(expand=True, fill="both")

# Create a save button
save_button = tk.Button(root, text="Save", command=save)
save_button.pack()


root.mainloop()



In this example, we create a simple text editor with a Text widget for the main text area. We use the wrap option to specify how the text should be wrapped within the widget. We also use the expand and fill options of the pack method to make the text widget fill the available space in the window.

When the user clicks the save button, the save function is called. This function prompts the user to select a file to save the text to using the asksaveasfilename function from the filedialog module. It then retrieves the contents of the text widget using the get method and writes them to the selected file.

Note that this example uses the filedialog module to display a file save dialog. This module is not included in the standard Python distribution, so you may need to install it separately or use a different method to prompt the user for a file name.